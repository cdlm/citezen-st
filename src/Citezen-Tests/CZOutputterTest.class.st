Class {
	#name : #CZOutputterTest,
	#superclass : #TestCase,
	#instVars : [
		'entry',
		'renderer',
		'result',
		'entry2'
	],
	#pools : [
		'CZPool'
	],
	#category : #'Citezen-Tests'
}

{ #category : #custom }
CZOutputterTest class >> isAbstract [

	^ self == CZOutputterTest
]

{ #category : #hooks }
CZOutputterTest >> rendererClass [
	self subclassResponsibility
]

{ #category : #setup }
CZOutputterTest >> setUp [
	entry := (CZEntry type: CZEntry article)
				key: #Duca10a;
				at: #author put: 'St\''ephane Ducasse and Damien Pollet';
				at: Title put: 'Fingerprints';
				at: Journal put: 'Journal of Information System';
				at: Year put: '2010';
				yourself.
	entry2 := (CZEntry type: CZEntry inproceedings)
				key: #Abde08a;
				at: #author put: 'Hani Abdeen and Ilham Alloui and St\''ephane Ducasse and Damien Pollet and Mathieu Suen';
				at: Title put: 'Package Reference Fingerprint: a Rich and Compact Visualization to Understand Package Relationships';
				at: #Aeres	 put: 'ACT';
 				at: #Aeresstatus   put:  'aeres08';
				at: #Annote       put:  'internationalconference stefPub';
 				at: BookTitle    put: 'European Conference on Software Maintenance and Reengineering (CSMR)';
  				at: #Inria	        put: 'ADAM';
  				at: #Keywords     put:  'moose-pub';
  				at: #Location     put: 'Athens, Greece';
  				at: #Misc	       put:  'Acceptance rate: 24/87 = 27\%';
  				at: #AcceptTotal  put:  87;
  				at: #AcceptNum    put:  24;
  				at: Pages	       put:  '213--222';
  				at: Publisher    put:  'IEEE Computer Society Press';
  				at: #Rate	       put:  '27%';
  				at: #Selectif     put:  'oui';
   				at: #Url	       put:  'http://scg.unibe.ch/archive/external/Abde08a.pdf';
   				at: Year	       put:  2008;
   				at: #'Bdsk-Url-1'  put: 'http://scg.unibe.ch/archive/external/Abde08a.pdf'.

	renderer := self rendererClass new
]

{ #category : #testing }
CZOutputterTest >> testArticle [

	result := renderer entryToString: entry.
	
]

{ #category : #testing }
CZOutputterTest >> testLongArticle [
	
	result := renderer entryToString: entry2.
	
]

{ #category : #testing }
CZOutputterTest >> testSeveral [
	
	result := renderer entriesToString: { entry . entry2}.
	
]
