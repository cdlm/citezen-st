Class {
	#name : #CZStefScript,
	#superclass : #Object,
	#instVars : [
		'document'
	],
	#category : #'Citezen-Script'
}

{ #category : #patterns }
CZStefScript >> allDisplayPattern [

	^ CZDisplayPattern new 
			defaultSeparator: ', ';
			field: #author;
			field: #title;
			field: #journal;
			field: #booktitle;
			field: #volume;
			field: #pages;
			field: #publisher; 
			field: #year;
		"	separator: '---'; "
			field: #impactfactor;
			field: #url;
			field: #doi;
			endsWith: '.'
]

{ #category : #patterns }
CZStefScript >> articleDisplayPattern [

	^ CZDisplayPattern new 
			defaultSeparator: ', ';
			field: #author;
			field: #title;
			field: #journal;
			field: #volume;
			field: #pages;
			field: #publisher; 
			field: #year;
		"	separator: '---'; "
			field: #impactfactor;
			field: #url;
			field: #doi;
			endsWith: '.'
]

{ #category : #patterns }
CZStefScript >> conferenceDisplayPattern [

	^ CZDisplayPattern new 
			defaultSeparator: ', ';
			field: #author;
			field: #title;
			field: #booktitle;
			field: #volume;
			field: #pages;
			field: #publisher; 
			field: #year;
		"	separator: '---'; "
			field: #impactFactor;
			field: #url;
			field: #doi;
			endsWith: '.'
]

{ #category : #script }
CZStefScript >> conferencesScript [
	^ CZScript new
		displayPattern: self articleDisplayPattern;
		reversedSortByField: #year;
		query: (self onlyStefAuthor 
					AND: (CZBibFieldQuery 
								named: #annote 
								checks: [ :value | '*internationalconference*' match: value ]))
]

{ #category : #accessing }
CZStefScript >> document [

	^ document ifNil: [document := CZDocument new]
]

{ #category : #public }
CZStefScript >> generateSortedByYear [
	"self new assembleSortedByYear"
	
	self inoutYear.
	self document 
		displayFullName.
	1999 to: 2009
		do: [:year | 
		self document 
				addElement: (CZTitleElement new 
							title: 'Articles in ', year asString; htmlLevel: 4);
				addElement: (self yearScript: year)].
	
	self document exportAsHtml. 
	self document generate.
	^ self document
]

{ #category : #public }
CZStefScript >> generateTypeOriented [
	"self new generateTypeOriented"
	
	self inout.
	self document 
		displayFullName ;
		orderedList ;
		doNotRestartOrderedListAtEachScript;
		addElement: (CZTitleElement new 
							title: 'Refereed Articles in International Journals'; htmlLevel: 4);
		addElement: self journalsScript;
		addElement: (CZTitleElement new 
							title: 'Refereed Articles in Top Conferences'; htmlLevel: 4);
		addElement: self topConferencesScript;
		addElement: (CZTitleElement new 
							title: 'Refereed Articles in Conferences'; htmlLevel: 4);
		addElement: self conferencesScript.
	self document exportAsHtml. 
	self document generate.
	^ self document
]

{ #category : #'file parameter' }
CZStefScript >> inout [

	self document
		inputFile: 'scg.bib';
		outputFile: 'stef.html'.
]

{ #category : #'file parameter' }
CZStefScript >> inoutYear [ 

	self document
		inputFile: 'scg.bib';
		outputFile: 'stefY.html'.
]

{ #category : #script }
CZStefScript >> journalsScript [
	^ CZScript new
		displayPattern: self articleDisplayPattern;
		reversedSortByField: #year;
		query: (self onlyStefAuthor 
					AND: (CZBibFieldQuery 
								named: #annote 
								checks: [ :value | '*internationaljournal*' match: value ]))
]

{ #category : #script }
CZStefScript >> metadata [

	self document addElement: (CZCommentElement new comment: 'Generated by Citezen --', Date today printString).
]

{ #category : #queries }
CZStefScript >> onlyStefAuthor [
	^ CZBibFieldQuery named: #author checks: [ :value | '*Ducasse*' match: value ]
]

{ #category : #script }
CZStefScript >> topConferencesScript [
	^ CZScript new
		displayPattern: self articleDisplayPattern;
		reversedSortByField: #year;
		query: (self onlyStefAuthor 
					AND: (CZBibFieldQuery 
								named: #annote 
								checks: [ :value | '*topconference*' match: value ]))
]

{ #category : #script }
CZStefScript >> yearScript: aYear [
 
	^ CZScript new
		displayPattern: self allDisplayPattern;
		sortByField: #author;
		query: (self onlyStefAuthor 
					AND: (CZBibFieldQuery 
								named: #year 
								checks: [ :value | value asInteger = aYear ]))
]
